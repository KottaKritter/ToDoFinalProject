{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kotta\\\\Documents\\\\FinalProject\\\\todo\\\\tesseract-frontend\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine, RiCheckboxCircleLine, RiArrowDownCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo,\n    showDescription\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\"\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  return todos.map((todo, index) =>\n  /*#__PURE__*/\n  // </div>\n  // <div>\n  _jsxDEV(\"div\", {\n    className: todo.is_done ? \"todo-row complete\" : \"todo-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => completeTodo(todo.id),\n        className: \"todo\",\n        children: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [/*#__PURE__*/_jsxDEV(RiCheckboxCircleLine, {\n          onClick: () => completeTodo(todo.id),\n          className: \"delete-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RiArrowDownCircleLine, {\n          onClick: () => showDescription(todo.id),\n          className: \"delete-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n          onClick: () => removeTodo(todo.id),\n          className: \"delete-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n          onClick: () => setEdit({\n            id: todo.id,\n            value: todo.title,\n            description: todo.description,\n            is_done: todo.is_done\n          }),\n          className: \"edit-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), todo.showDescription && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      className: \"description\",\n      children: [\"Description: \", todo.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n};\n\n_s(Todo, \"Pi1ai0UKfwOWL0A5OHPvwHxg7To=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/kotta/Documents/FinalProject/todo/tesseract-frontend/src/components/Todo.js"],"names":["React","useState","useEffect","TodoForm","RiCloseCircleLine","RiCheckboxCircleLine","RiArrowDownCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","showDescription","edit","setEdit","id","value","submitUpdate","map","todo","index","is_done","title","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport {\r\n  RiCloseCircleLine,\r\n  RiCheckboxCircleLine,\r\n  RiArrowDownCircleLine,\r\n} from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\nconst Todo = ({\r\n  todos,\r\n  completeTodo,\r\n  removeTodo,\r\n  updateTodo,\r\n  showDescription,\r\n}) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    // </div>\r\n    // <div>\r\n    <div\r\n      className={todo.is_done ? \"todo-row complete\" : \"todo-row\"}\r\n      key={index}\r\n    >\r\n      <div className=\"description\">\r\n        <div\r\n          key={todo.id}\r\n          onClick={() => completeTodo(todo.id)}\r\n          className=\"todo\"\r\n        >\r\n          {todo.title}\r\n        </div>\r\n        <div className=\"icons\">\r\n          <RiCheckboxCircleLine\r\n            onClick={() => completeTodo(todo.id)}\r\n            className=\"delete-icon\"\r\n          />\r\n          <RiArrowDownCircleLine\r\n            onClick={() => showDescription(todo.id)}\r\n            className=\"delete-icon\"\r\n          />\r\n          <RiCloseCircleLine\r\n            onClick={() => removeTodo(todo.id)}\r\n            className=\"delete-icon\"\r\n          />\r\n          <TiEdit\r\n            onClick={() =>\r\n              setEdit({\r\n                id: todo.id,\r\n                value: todo.title,\r\n                description: todo.description,\r\n                is_done: todo.is_done,\r\n              })\r\n            }\r\n            className=\"edit-icon\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {todo.showDescription && (\r\n        <div onClick={() => completeTodo(todo.id)} className=\"description\">\r\n          Description: {todo.description}\r\n        </div>\r\n      )}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}