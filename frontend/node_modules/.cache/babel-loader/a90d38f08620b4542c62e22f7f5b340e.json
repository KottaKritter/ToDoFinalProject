{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kotta\\\\Documents\\\\FinalProject\\\\todo\\\\tesseract-frontend\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = \"http://localhost:3001/to-dos/\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    axios.get(apiUrl).then(response => {\n      setTodos(response.data.todos);\n    });\n  }, []);\n\n  const addTodo = todo => {\n    if (!todo.title || /^\\s*$/.test(todo.title)) {\n      return;\n    }\n\n    axios.post(apiUrl, {\n      title: todo.title,\n      description: todo.description,\n      isDone: false\n    }).then(() => {\n      axios.get(apiUrl).then(response => {\n        setTodos(response.data.todos);\n      });\n    });\n  };\n\n  const showDescription = todoId => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === todoId) {\n        todo.showDescription = !todo.showDescription;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    console.log(newValue);\n\n    if (!newValue.title || /^\\s*$/.test(newValue.title)) {\n      return;\n    }\n\n    try {\n      axios.patch(\"http://localhost:3001/to-dos/\", {\n        data: newValue\n      });\n      setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const removeTodo = id => {\n    axios.delete(`http://localhost:3001/to-dos/${id}`).then(() => {\n      axios.get(apiUrl).then(response => {\n        setTodos(response.data.todos);\n      });\n    });\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    try {\n      const updateTodo = todos.find(todo => todo.id === id);\n      axios({\n        method: \"patch\",\n        url: `${apiUrl}`,\n        params: {\n          id: `${id}`\n        },\n        data: {\n          title: `${updateTodo.title}`,\n          description: `${updateTodo.description}`,\n          isDone: `${updateTodo.is_done === 1 ? 0 : 1}`\n        }\n      });\n      setTodos(prev => prev.map(todo => todo.id === id ? updateTodo : todo));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo,\n      showDescription: showDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/kotta/Documents/FinalProject/todo/tesseract-frontend/src/components/TodoList.js"],"names":["React","useState","axios","TodoForm","Todo","useEffect","apiUrl","TodoList","todos","setTodos","get","then","response","data","addTodo","todo","title","test","post","description","isDone","showDescription","todoId","updatedTodos","map","id","updateTodo","newValue","console","log","patch","prev","item","error","removeTodo","delete","removedArr","filter","completeTodo","find","method","url","params","is_done"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst apiUrl = \"http://localhost:3001/to-dos/\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(apiUrl).then((response) => {\r\n      setTodos(response.data.todos);\r\n    });\r\n  }, []);\r\n\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.title || /^\\s*$/.test(todo.title)) {\r\n      return;\r\n    }\r\n\r\n    axios.post(apiUrl, {\r\n      title: todo.title,\r\n      description: todo.description,\r\n      isDone: false,\r\n    }).then(() => {\r\n      axios.get(apiUrl).then((response) =>{\r\n        setTodos(response.data.todos);\r\n      });\r\n    },)\r\n  };\r\n\r\n  const showDescription = (todoId) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === todoId) {\r\n        todo.showDescription = !todo.showDescription;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    console.log(newValue);\r\n    if (!newValue.title || /^\\s*$/.test(newValue.title)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      axios.patch(\"http://localhost:3001/to-dos/\", {\r\n        data: newValue\r\n            },\r\n        );\r\n      setTodos((prev) =>\r\n        prev.map((item) => (item.id === todoId ? newValue : item))\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n\r\n    axios.delete(`http://localhost:3001/to-dos/${id}`).then(() => {\r\n      axios.get(apiUrl).then((response) =>{\r\n        setTodos(response.data.todos);\r\n      });\r\n    },)\r\n\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    try {\r\n      const updateTodo = todos.find((todo) => todo.id === id);\r\n\r\n      axios({\r\n        method: \"patch\",\r\n        url: `${apiUrl}`,\r\n        params: {\r\n          id: `${id}`,\r\n        },\r\n        data: {\r\n          title: `${updateTodo.title}`,\r\n          description: `${updateTodo.description}`,\r\n          isDone: `${updateTodo.is_done === 1 ? 0 : 1}`,\r\n        },\r\n      });\r\n\r\n      setTodos((prev) =>\r\n        prev.map((todo) => (todo.id === id ? updateTodo : todo))\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>What's the Plan for Today?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n        showDescription={showDescription}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}