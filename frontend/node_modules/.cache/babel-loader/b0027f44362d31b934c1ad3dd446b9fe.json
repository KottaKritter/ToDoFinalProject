{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kotta\\\\Documents\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect, useRef } from \"react\";\nimport React, { useState, useRef } from \"react\";\nimport { BsArrowDown, BsPlusCircleFill } from \"react-icons/bs\";\nimport { RiCheckboxCircleLine } from \"react-icons/ri\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n  const [showDescription, setShowDescription] = useState(false);\n  const [is_done, setIsDone] = useState(props.edit ? props.edit.is_done : 0);\n  const [description, setDescription] = useState(props.edit ? props.edit.description : \"\");\n  const inputRef = useRef(null);\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleDescription = e => {\n    e.preventDefault();\n    setShowDescription(!showDescription);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      title: input,\n      description,\n      isDone: is_done,\n      showDescription: false\n    });\n    setInput(\"\");\n    setDescription(\"\");\n    setIsDone(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    children: props.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-form--update\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Update your item\",\n        value: input,\n        onChange: handleChange,\n        name: \"title\",\n        ref: inputRef,\n        className: \"todo-input edit todo-description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: description,\n        onChange: handleDescriptionChange,\n        name: \"description\",\n        className: \"todo-input todo-description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button\",\n        children: /*#__PURE__*/_jsxDEV(RiCheckboxCircleLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add a todo\",\n        value: input,\n        onChange: handleChange,\n        name: \"title\",\n        className: \"todo-input\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDescription,\n        className: \"todo-button edit\",\n        children: /*#__PURE__*/_jsxDEV(BsArrowDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button\",\n        children: /*#__PURE__*/_jsxDEV(BsPlusCircleFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), showDescription && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: description,\n        onChange: handleDescriptionChange,\n        name: \"description\",\n        className: \"todo-input todo-description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"VeU8iWHLxofdEUnWHTafyAhaCjw=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/kotta/Documents/FinalProject/frontend/src/components/TodoForm.js"],"names":["React","useState","useRef","BsArrowDown","BsPlusCircleFill","RiCheckboxCircleLine","TodoForm","props","input","setInput","edit","value","showDescription","setShowDescription","is_done","setIsDone","description","setDescription","inputRef","handleChange","e","target","handleDescriptionChange","handleDescription","preventDefault","handleSubmit","onSubmit","id","Math","floor","random","title","isDone"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,gBAA9C;AACA,SAASC,oBAAT,QAAqC,gBAArC;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACa,OAAD,EAAUC,SAAV,IAAuBd,QAAQ,CAACM,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWI,OAAxB,GAAkC,CAAnC,CAArC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAC5CM,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWM,WAAxB,GAAsC,EADM,CAA9C;AAIA,QAAME,QAAQ,GAAGhB,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMiB,YAAY,GAAIC,CAAD,IAAO;AAC1BX,IAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMW,uBAAuB,GAAIF,CAAD,IAAO;AACrCH,IAAAA,cAAc,CAACG,CAAC,CAACC,MAAF,CAASV,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMY,iBAAiB,GAAIH,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACI,cAAF;AACAX,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD,GAHD;;AAKA,QAAMa,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AAEAjB,IAAAA,KAAK,CAACmB,QAAN,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;AAEbC,MAAAA,KAAK,EAAEvB,KAFM;AAGbQ,MAAAA,WAHa;AAIbgB,MAAAA,MAAM,EAAElB,OAJK;AAKbF,MAAAA,eAAe,EAAE;AALJ,KAAf;AAOAH,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAQ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAF,IAAAA,SAAS,CAAC,CAAD,CAAT;AACD,GAbD;;AAeA,sBACE;AAAM,IAAA,QAAQ,EAAEU,YAAhB;AAA8B,IAAA,SAAS,EAAC,WAAxC;AAAA,cACGlB,KAAK,CAACG,IAAN,gBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,kBADd;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,QAAQ,EAAEW,YAHZ;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,GAAG,EAAED,QALP;AAME,QAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,KAAK,EAAEF,WAFT;AAGE,QAAA,QAAQ,EAAEM,uBAHZ;AAIE,QAAA,IAAI,EAAC,aAJP;AAKE,QAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AAAQ,QAAA,OAAO,EAAEG,YAAjB;AAA+B,QAAA,SAAS,EAAC,aAAzC;AAAA,+BACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAuBC;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,YADd;AAEE,QAAA,KAAK,EAAEjB,KAFT;AAGE,QAAA,QAAQ,EAAEW,YAHZ;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,SAAS,EAAC,YALZ;AAME,QAAA,GAAG,EAAED;AANP;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,OAAO,EAAEK,iBAAjB;AAAoC,QAAA,SAAS,EAAC,kBAA9C;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAYE;AAAQ,QAAA,OAAO,EAAEE,YAAjB;AAA+B,QAAA,SAAS,EAAC,aAAzC;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF,EAeGb,eAAe,iBACd;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,KAAK,EAAEI,WAFT;AAGE,QAAA,QAAQ,EAAEM,uBAHZ;AAIE,QAAA,IAAI,EAAC,aAJP;AAKE,QAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAxBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;;GA3FQhB,Q;;KAAAA,Q;AA6FT,eAAeA,QAAf","sourcesContent":["// import React, { useState, useEffect, useRef } from \"react\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport { BsArrowDown, BsPlusCircleFill } from \"react-icons/bs\";\r\nimport { RiCheckboxCircleLine } from \"react-icons/ri\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const [is_done, setIsDone] = useState(props.edit ? props.edit.is_done : 0);\r\n  const [description, setDescription] = useState(\r\n    props.edit ? props.edit.description : \"\"\r\n  );\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleDescription = (e) => {\r\n    e.preventDefault();\r\n    setShowDescription(!showDescription);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      title: input,\r\n      description,\r\n      isDone: is_done,\r\n      showDescription: false,\r\n    });\r\n    setInput(\"\");\r\n    setDescription(\"\");\r\n    setIsDone(0);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo-form\">\r\n      {props.edit ? (\r\n        <div className=\"todo-form--update\">\r\n          <input\r\n            placeholder=\"Update your item\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"title\"\r\n            ref={inputRef}\r\n            className=\"todo-input edit todo-description\"\r\n          />\r\n          <textarea\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            onChange={handleDescriptionChange}\r\n            name=\"description\"\r\n            className=\"todo-input todo-description\"\r\n          />\r\n\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            <RiCheckboxCircleLine />\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"title\"\r\n            className=\"todo-input\"\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleDescription} className=\"todo-button edit\">\r\n            <BsArrowDown />\r\n          </button>\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            <BsPlusCircleFill />\r\n          </button>\r\n          {showDescription && (\r\n            <textarea\r\n              placeholder=\"Description\"\r\n              value={description}\r\n              onChange={handleDescriptionChange}\r\n              name=\"description\"\r\n              className=\"todo-input todo-description\"\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}